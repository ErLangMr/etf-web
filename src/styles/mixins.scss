@use 'variables' as *;

// 弹性布局
@mixin flex($direction: row, $justify: flex-start, $align: stretch) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
}

// 文本溢出省略
@mixin text-ellipsis($lines: 1) {
  @if $lines == 1 {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  } @else {
    display: -webkit-box;
    -webkit-line-clamp: $lines;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
}

// 响应式断点
@mixin mobile {
  @media screen and (max-width: $breakpoint-mobile) {
    @content;
  }
}

// 清除浮动
@mixin clearfix {
  &::after {
    content: '';
    display: table;
    clear: both;
  }
}

// 绝对定位居中
@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// 过渡动画
@mixin transition($properties...) {
  $transitions: ();
  @each $property in $properties {
    $transitions: append($transitions, $property $transition-duration ease-in-out, comma);
  }
  transition: $transitions;
}

// 阴影
@mixin box-shadow($level: 'base') {
  @if $level == 'light' {
    box-shadow: $box-shadow-light;
  } @else if $level == 'dark' {
    box-shadow: $box-shadow-dark;
  } @else {
    box-shadow: $box-shadow-base;
  }
} 